<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>{{title}}</title>
    <link rel="stylesheet" type="text/css" href="/stylesheets/data-source.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
  </head>
  <body>
    <h1>Data Sources</h1>
    <h2>Org ID: {{orgId}}</h2>
    <div class="main-container">
      <div class="data-container">
        <div id="dataSourcesList" class="data-sources-list">
          {{#each dataSources}}
            <div class="data-source-card">
              <h3>Data Source {{@index}}</h3>
              <p><strong>ID:</strong> {{this.id}}</p>
              <p><strong>Schema ID:</strong> {{this.schemaId}}</p>
              <p><strong>Application ID:</strong> <span class="application-id">{{this.applicationId}}</span></p>
              <p><strong>Status:</strong> <span class="status {{this.status}}">{{this.status}}</span></p>
              <p><strong>Created By:</strong> {{this.createdBy}}</p>
              <p><strong>Created At:</strong> {{this.createdAt}}</p>
              <div class="card-buttons">
                <button class="edit-button" onclick="editDataSource('{{this.id}}', '{{this.schemaId}}')">Edit</button>
                <button class="delete-button" onclick="deleteDataSource('{{this.id}}')">Delete</button>
                <button class="refresh-button" onclick="refreshJWSToken('{{this.id}}')">Refresh Token</button>
              </div>
            </div>
          {{/each}}
        </div>
      </div>
    </div>

    <!-- Plus Button for Adding New Data Source -->
    <button id="addDataSourceButton" class="add-button" onclick="openAddForm()">+</button>

    <!-- Edit/Add Data Source Modal -->
    <div id="editDataSourceModal" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closeEditForm()">&times;</span>
        <form id="editForm">
          <h2 id="formTitle">Edit Data Source</h2>
          <input type="hidden" id="editDataSourceId" name="id">
          <label id="schemaIdLabel" for="schemaId">Schema ID:</label>
          <input type="text" id="schemaId" name="schemaId">
          <label for="url">URL:</label>
          <input type="text" id="editUrl" name="url" required>
          <label for="audience">Audience:</label>
          <input type="text" id="editAudience" name="audience" required>
          <label for="subject">Subject:</label>
          <input type="text" id="editSubject" name="subject" required>
          <label for="nonce">Nonce:</label>
          <input type="text" id="editNonce" name="nonce" required>
          <label for="tokenLifetimeMinutes">Token Lifetime (Minutes):</label>
          <input type="number" id="editTokenLifetimeMinutes" name="tokenLifetimeMinutes" required>
          <button type="submit" class="form-button">Save</button>
          <button type="button" class="form-button cancel-button" onclick="closeEditForm()">Cancel</button>
        </form>
      </div>
    </div>

    <script>
      let isEdit = true;
      let currentId = null;
      let currentSchemaId = null;

      function openAddForm() {
        isEdit = false;
        document.getElementById('formTitle').textContent = 'Add Data Source';
        document.getElementById('editForm').reset();
        document.getElementById('schemaId').style.display = 'block'; // Show schema ID field
        document.getElementById('schemaIdLabel').style.display = 'block'; // Show schema ID label
        document.getElementById('editDataSourceModal').style.display = 'block';
      }

      function editDataSource(id, schemaId) {
        isEdit = true;
        currentId = id;
        currentSchemaId = schemaId;
        document.getElementById('formTitle').textContent = 'Update Data Source';
        document.getElementById('editForm').reset();
        document.getElementById('schemaId').style.display = 'none'; // Hide schema ID field
        document.getElementById('schemaIdLabel').style.display = 'none'; // Hide schema ID label
        document.getElementById('editDataSourceModal').style.display = 'block';
      }

      function closeEditForm() {
        document.getElementById('editDataSourceModal').style.display = 'none';
      }

      document.getElementById('editForm').addEventListener('submit', function(event) {
        event.preventDefault();
        console.error('Form submit event triggered');
        const id = document.getElementById('editDataSourceId').value;
        const schemaId = isEdit ? currentSchemaId : document.getElementById('schemaId').value;
        const dataSourcePayload = {
          schemaId,
          url: document.getElementById('editUrl').value,
          audience: document.getElementById('editAudience').value,
          subject: document.getElementById('editSubject').value,
          nonce: document.getElementById('editNonce').value,
          tokenLifetimeMinutes: document.getElementById('editTokenLifetimeMinutes').value,
        };
        console.log('Submitting data:', dataSourcePayload); // Debugging log
        const endpoint = isEdit ? `/api/data-source/update` : `/api/data-source/add`;
        fetch(endpoint, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(isEdit ? { id: currentId, ...dataSourcePayload } : dataSourcePayload)
        })
          .then(data => {
            if (data.error) {
              throw new Error(data.error);
            }
            alert(`Data source ${isEdit ? 'updated' : 'added'} successfully`);
            location.reload();
          })
          .catch(error => {
            alert(`Error ${isEdit ? 'updating' : 'adding'} data source: ${error.message}`);
          });
      });

      function deleteDataSource(id) {
        fetch(`/api/data-source/delete/${id}`, {
          method: 'DELETE'
        })
          .then(data => {
            if (data.error) {
              throw new Error(data.error);
            }
            alert(`Data source with ID: ${id} deleted successfully`);
            location.reload();
          })
          .catch(error => {
            alert(`Error deleting data source with ID: ${id}: ${error.message}`);
          });
      }

      function refreshJWSToken(id) {
        fetch(`/api/data-source/refresh-token/${id}`, {
          method: 'POST'
        })
          .then(response => response.json())
          .then(data => {
            if (data.error) {
              throw new Error(data.error);
            }
            alert(`JWS token for data source with ID: ${id} refreshed successfully`);
            location.reload();
          })
          .catch(error => {
            alert(`Error refreshing JWS token for data source with ID: ${id}: ${error.message}`);
          });
      }

      // Close the modal when clicking outside of it
      window.onclick = function(event) {
        const modal = document.getElementById('editDataSourceModal');
        if (event.target === modal) {
          modal.style.display = 'none';
        }
      }
    </script>
  </body>
</html>